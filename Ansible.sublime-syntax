%YAML 1.2
---
name: Ansible
scope: source.ansible
version: 2

variables:

  results: "(failed|succeeded|skipped)"
  functions: "(d(efault)?|query|lookup|combine|dict2items|product|list|query)"

contexts:

  main:
    - match: ''
      push: Packages/YAML/YAML.sublime-syntax
      with_prototype:
        - include: entity-ansible
        - include: constant-ansible
        - include: jinja
        - include: keyword-control
        - include: comments

  comments:
    - match: '#.+$'
      scope: comment.line.ansible
      push:
        - include: main

  entity-ansible:
    - match: '- name:.*$'
      scope: entity.name.ansible
      pop: true

  constant-results:
    - match: \b{{results}}\b
      scope: constant.other.ansible
      pop: true

  constant-ansible:
    - match: 'ansible_((?:\.)?\w+(\[\w\]+)?)+'
      scope: constant.other.ansible

  keyword-control:
    - match: \b(is|or|(or )?not|if|else|(((un)?defined)))\b
      scope: keyword.control.ansible
      apply_prototype: true

  jinja:
    - match: '{{'
      scope: punctuation.section.block.begin.ansible
      push:
        - include: jinja-storage
        - include: string
        - include: numeric
        - include: jinja-keyword-control
        - include: jinja-end

  jinja-storage:
    - include: constant-ansible
    - match: \b\w*[a-zA-Z]+\w+\b
      scope: storage.type.ansible

  jinja-keyword-control:
    - match: (\||==|!=)
      scope: keyword.control.ansible

  jinja-end:
    - match: '}}'
      scope: punctuation.section.block.end.ansible
      pop: true

  numeric:
    - match: \d+
      scope: constant.numeric.integer.ansible

  string:
    - match: \\'
      scope: string.quoted.other.ansible
    - match: \\"
      scope: string.quoted.other.ansible
    - match: \\.
      scope: constant.character.escape.ansible
    - match: \b"|'\b
      scope: string.quoted.other.ansible
      pop: true
